(page "index.html"
  (:require
    [hoplon.ui :as u]))

(defc things [0 1 2])

(def metadata
  [{:property "og:url"                   :content "http://www.mysite.com/"}
   {:name    "image_src"                 :content "http://www.mysite.com/images/logo-fb.png"}
   {:property "og:image"                 :content "http://www.mysite.com/images/logo-180.png"}
   {:property "og:image:width"           :content "180"}
   {:property "og:image:height"          :content "110"}
   {:property "og:image"                 :content "http://www.mysite.com/images/logo-250.png"}
   {:property "og:image:width"           :content "250"}
   {:property "og:image:height"          :content "250"}
   {:content  "text/html; charset=UTF-8" :http-equiv "content-type"}])

;;; styles ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(def sm 736)
(def lg 1069)

;;; views ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(u/window
  :title    "Hoplon UI"
  :route    [["tests"] {:foo "bar" :baz "barf"}]
  :metadata metadata
  (u/elem :w "100%" :p 6 :av :middle :sb 1 :s-color 0xCCC :shadow "0 1px 4px 0 rgba(0,0,0,0.37)"
    (u/elem :w ["100%" sm 160]
      (u/image :w 50 :h 50 :url "hoplon-logo.png")
      (u/elem :ml 6 :font-size 21 :font-height 50 "Hoplon UI"))
    (u/elem :w ["100%" sm '(- "100%" 160)] :ah :right :g 6
      (u/button   :w ["100%" sm 200] :h 50 :click #(swap! things conj (count @things)) "Add Thing")
      (u/button   :w ["100%" sm 200] :h 50 :click #(swap! things pop) "Remove Thing")
      (u/dropdown :w ["100%" sm 200] :h 50 :prompt "ChangeThing" :options (cell= (map str things)))))
  (u/elem :w "100%" :h "100%" :ah :center :av :middle
    (u/elem :w ["100%" sm sm] :ah :center :g 10
      (u/elem :w "100%" :h 200 :ah :center :av :middle :color 0xEEE :s 2 :s-color 0xCCC
        "Responsive Boxes")
      (u/elem :w ["100%" sm 0.333] :h 200 :ah :center :av :middle :color 0xEEE :s 2 :s-color 0xCCC
        "Foo")
      (u/elem :w ["100%" sm 0.333] :h 200 :ah :center :av :middle :color 0xEEE :s 2 :s-color 0xCCC
        "Bar")
      (u/elem :w ["100%" sm 0.333] :h 200 :ah :center :av :middle :color 0xEEE :s 2 :s-color 0xCCC
        "Baz")
      (u/elem :w "100%" :h 200 :ah :center :av :middle :color 0xEEE :s 2 :s-color 0xCCC
        (let [w (cell= (str (/ 100 (count things)) "%"))]
          (for-tpl [thing things]
            (u/elem :w w :ah :center thing)))))))
